/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#pragma once

#include "../JuceLibraryCode/JuceHeader.h"
#include "sid.h"
#include "slCommon.h"

//==============================================================================
/**
*/
class SIDAudioProcessorEditor;
class SIDAudioProcessor : public slProcessor
{
public:
    //==============================================================================
    SIDAudioProcessor();
    ~SIDAudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    
    static const char* paramPulseWidth1;
    static const char* paramWave1;
    static const char* paramA1;
    static const char* paramD1;
    static const char* paramS1;
    static const char* paramR1;
    static const char* paramVol;

private:
    void runUntil (int& done, AudioSampleBuffer& buffer, int pos);
    
    int lastNote = -1;
    int velocity = 0;
    Array<int> noteQueue;
    
    LinearSmoothedValue<float> outputSmoothed;
    Component::SafePointer<SIDAudioProcessorEditor> editor;
    
    SID sid;
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (SIDAudioProcessor)
};

