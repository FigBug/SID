/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#pragma once

#include "../JuceLibraryCode/JuceHeader.h"
#include "sid.h"

//==============================================================================
/**
*/
class SIDAudioProcessorEditor;
class SIDAudioProcessor : public gin::GinProcessor
{
public:
    //==============================================================================
    SIDAudioProcessor();
    ~SIDAudioProcessor() override;

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;

    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    
    static const char* paramWave1;
    static const char* paramPulseWidth1;
    static const char* paramA1;
    static const char* paramD1;
    static const char* paramS1;
    static const char* paramR1;
    static const char* paramTune1;
    static const char* paramFine1;
    static const char* paramSync1;
    static const char* paramRing1;
    static const char* paramWave2;
    static const char* paramPulseWidth2;
    static const char* paramA2;
    static const char* paramD2;
    static const char* paramS2;
    static const char* paramR2;
    static const char* paramTune2;
    static const char* paramFine2;
    static const char* paramSync2;
    static const char* paramRing2;
    static const char* paramWave3;
    static const char* paramPulseWidth3;
    static const char* paramA3;
    static const char* paramD3;
    static const char* paramS3;
    static const char* paramR3;
    static const char* paramTune3;
    static const char* paramFine3;
    static const char* paramSync3;
    static const char* paramRing3;
    static const char* paramCutoff;
    static const char* paramReso;
    static const char* paramFilter1;
    static const char* paramFilter2;
    static const char* paramFilter3;
    static const char* paramLP;
    static const char* paramBP;
    static const char* paramHP;
    static const char* paramVol;
    static const char* paramOutput3;
    
    gin::AudioFifo fifo {1, 44100};

private:
    void runUntil (int& done, AudioSampleBuffer& buffer, int pos);
    void updateOscs (int curNote);
    void writeReg (uint8 reg, uint8 value);
    
    int lastNote = -1;
    int velocity = 0;
    float pitchBend = 0;
    Array<int> noteQueue;
    
    LinearSmoothedValue<float> outputSmoothed;
    
    SID sid;
    IIRFilter outputFilter;
    
    std::map<uint8, uint8> regCache;
    
    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (SIDAudioProcessor)
};

