/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

namespace BinaryData
{

//================== logo.png ==================
static const unsigned char temp_binary_data_0[] =
{ 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,200,0,0,0,30,8,2,0,0,0,230,93,198,251,0,0,0,4,103,65,77,65,0,0,177,143,11,252,97,5,0,0,0,32,99,72,82,77,0,0,122,38,0,0,128,132,0,0,250,0,0,0,128,232,0,0,117,48,0,0,234,96,0,0,58,152,0,0,23,112,156,186,
81,60,0,0,0,9,112,72,89,115,0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,2,114,105,84,88,116,88,77,76,58,99,111,109,46,97,100,111,98,101,46,120,109,112,0,0,0,0,0,60,120,58,120,109,112,109,101,116,97,32,120,109,108,110,115,58,120,61,34,97,100,111,98,101,58,
110,115,58,109,101,116,97,47,34,32,120,58,120,109,112,116,107,61,34,88,77,80,32,67,111,114,101,32,53,46,52,46,48,34,62,10,32,32,32,60,114,100,102,58,82,68,70,32,120,109,108,110,115,58,114,100,102,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,
111,114,103,47,49,57,57,57,47,48,50,47,50,50,45,114,100,102,45,115,121,110,116,97,120,45,110,115,35,34,62,10,32,32,32,32,32,32,60,114,100,102,58,68,101,115,99,114,105,112,116,105,111,110,32,114,100,102,58,97,98,111,117,116,61,34,34,10,32,32,32,32,32,
32,32,32,32,32,32,32,120,109,108,110,115,58,116,105,102,102,61,34,104,116,116,112,58,47,47,110,115,46,97,100,111,98,101,46,99,111,109,47,116,105,102,102,47,49,46,48,47,34,10,32,32,32,32,32,32,32,32,32,32,32,32,120,109,108,110,115,58,120,109,112,61,34,
104,116,116,112,58,47,47,110,115,46,97,100,111,98,101,46,99,111,109,47,120,97,112,47,49,46,48,47,34,62,10,32,32,32,32,32,32,32,32,32,60,116,105,102,102,58,89,82,101,115,111,108,117,116,105,111,110,62,55,50,60,47,116,105,102,102,58,89,82,101,115,111,108,
117,116,105,111,110,62,10,32,32,32,32,32,32,32,32,32,60,116,105,102,102,58,67,111,109,112,114,101,115,115,105,111,110,62,53,60,47,116,105,102,102,58,67,111,109,112,114,101,115,115,105,111,110,62,10,32,32,32,32,32,32,32,32,32,60,116,105,102,102,58,88,
82,101,115,111,108,117,116,105,111,110,62,55,50,60,47,116,105,102,102,58,88,82,101,115,111,108,117,116,105,111,110,62,10,32,32,32,32,32,32,32,32,32,60,120,109,112,58,67,114,101,97,116,111,114,84,111,111,108,62,70,108,121,105,110,103,32,77,101,97,116,
32,65,99,111,114,110,32,53,46,54,46,53,60,47,120,109,112,58,67,114,101,97,116,111,114,84,111,111,108,62,10,32,32,32,32,32,32,32,32,32,60,120,109,112,58,77,111,100,105,102,121,68,97,116,101,62,50,48,49,55,45,48,56,45,49,48,84,50,50,58,49,49,58,49,57,60,
47,120,109,112,58,77,111,100,105,102,121,68,97,116,101,62,10,32,32,32,32,32,32,60,47,114,100,102,58,68,101,115,99,114,105,112,116,105,111,110,62,10,32,32,32,60,47,114,100,102,58,82,68,70,62,10,60,47,120,58,120,109,112,109,101,116,97,62,10,40,2,220,165,
0,0,3,135,73,68,65,84,120,1,237,90,65,75,106,65,20,78,123,38,72,45,148,90,20,5,69,145,32,184,140,106,165,11,81,106,209,198,104,245,22,254,128,66,73,221,169,8,109,138,22,18,45,220,6,226,74,221,72,237,164,85,155,192,133,32,22,81,65,43,23,17,15,74,66,148,
242,189,195,243,49,204,155,235,220,91,79,211,123,231,157,89,157,57,115,230,220,239,126,115,156,227,204,61,67,67,216,144,1,100,0,25,64,6,144,1,100,0,25,64,6,122,205,128,174,215,14,7,233,79,167,211,45,47,47,187,92,174,145,145,17,121,28,183,183,183,249,
124,254,249,249,153,103,102,177,88,2,129,0,111,180,173,191,188,188,60,59,59,235,104,179,190,190,190,178,178,210,113,136,40,95,94,94,238,238,238,174,175,175,111,110,110,136,18,5,213,49,48,60,60,12,43,244,243,195,173,209,104,120,189,94,222,107,204,207,
207,43,122,58,62,62,230,77,63,58,58,82,156,78,12,50,153,204,244,244,52,207,149,70,245,122,141,226,150,194,118,58,157,139,139,139,82,61,79,3,187,154,207,231,227,141,246,83,191,185,185,89,40,20,20,119,217,126,66,234,254,89,223,186,119,161,18,15,30,143,
135,65,146,76,38,175,174,174,104,101,44,22,155,152,152,32,26,183,219,13,217,19,118,14,162,33,194,211,211,211,246,246,54,116,103,103,103,67,161,16,209,131,80,44,22,79,78,78,64,40,151,203,180,94,94,6,48,149,74,5,108,166,166,166,32,146,152,223,128,213,106,
245,251,253,135,135,135,242,78,112,116,0,12,72,179,207,218,218,26,131,67,154,43,33,176,24,27,166,187,180,180,68,114,86,91,72,167,211,140,141,180,171,8,38,30,143,51,110,207,207,207,165,126,180,171,17,39,21,106,107,13,82,169,20,3,120,97,97,129,209,104,
186,43,78,42,252,200,50,4,131,193,177,177,49,218,178,99,30,164,13,190,72,190,191,191,127,120,120,128,60,75,252,195,255,119,94,94,38,54,26,18,254,175,192,58,61,61,85,207,218,52,155,77,26,140,98,82,166,141,213,47,99,42,84,255,26,105,18,161,56,59,214,227,
227,35,179,2,123,123,123,112,212,98,148,237,46,92,144,194,237,209,197,197,69,171,213,234,104,128,74,100,224,15,3,54,155,141,57,103,41,118,121,97,71,115,250,69,167,66,120,196,63,28,81,105,96,42,151,197,73,133,112,101,149,72,36,164,251,150,204,2,108,109,
109,201,140,226,80,55,12,136,147,10,129,133,221,221,221,112,56,108,183,219,121,183,216,217,108,118,102,102,134,240,181,186,186,42,210,65,140,188,151,26,4,161,2,11,8,125,127,127,47,149,74,60,102,235,245,58,61,36,216,65,140,126,181,129,203,226,164,194,
129,83,137,0,104,6,196,9,172,104,52,10,85,40,116,115,56,28,244,171,170,74,54,26,141,147,147,147,52,164,215,215,215,65,221,214,210,48,122,37,139,147,10,199,199,199,161,214,133,230,197,100,50,209,93,85,201,240,201,156,249,6,0,63,9,85,33,236,18,140,56,129,
213,37,17,125,155,14,241,180,177,177,193,84,76,192,211,153,66,140,190,225,193,7,41,48,176,179,179,195,92,92,213,106,181,31,127,55,248,107,79,219,200,108,18,115,115,115,237,169,80,101,74,79,1,25,42,4,219,67,7,7,7,60,76,210,234,6,2,6,190,228,48,14,161,
251,246,246,6,135,89,158,55,45,234,197,217,177,114,185,28,44,39,125,208,27,29,29,149,95,18,184,124,231,25,232,245,122,179,217,220,113,20,238,50,218,215,25,159,74,181,50,96,32,170,34,145,200,167,170,187,58,2,83,149,82,156,192,170,86,171,223,127,55,168,
121,55,24,12,242,44,195,94,5,81,37,83,91,44,63,189,39,163,176,135,1,12,168,121,223,223,223,23,44,170,122,194,15,58,65,6,144,1,100,0,25,64,6,144,1,100,0,25,64,6,144,129,190,48,240,11,178,80,136,246,97,204,178,229,0,0,0,0,73,69,78,68,174,66,96,130,0,0 };

const char* logo_png = (const char*) temp_binary_data_0;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;
    if (resourceNameUTF8 != 0)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0x78ded995:  numBytes = 1679; return logo_png;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "logo_png"
};

const char* originalFilenames[] =
{
    "logo.png"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
    {
        if (namedResourceList[i] == resourceNameUTF8)
            return originalFilenames[i];
    }

    return nullptr;
}

}
